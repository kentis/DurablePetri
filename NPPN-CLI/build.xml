<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="NPPN-CLI">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="/home/kent/usr/eclipse-4.2/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="Groovy Libraries.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/groovy-all-2.0.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/ivy-2.2.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/antlr-2.7.7.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/bsf-2.4.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/asm-tree-4.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/jline-1.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/commons-cli-1.2.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/servlet-api-2.4.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/lib/asm-4.0.jar"/>
    </path>
    <path id="Groovy DSL Support.libraryclasspath">
        <pathelement location="../../.groovy/greclipse/global_dsld_support"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.codehaus.groovy_2.0.0.xx-20120703-1400-e42-RELEASE/plugin_dsld_support/"/>
    </path>
    <path id="Plug-in Dependencies.libraryclasspath"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.10.0.v4_10_0_v20120426-0900/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="NPPN-CLI.classpath">
        <pathelement location="bin"/>
        <path refid="Groovy Libraries.libraryclasspath"/>
        <path refid="Groovy DSL Support.libraryclasspath"/>
	<pathelement location="lib/accesscpn.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/org.eclipse.emf.common_2.8.0.v20120606-0717.jar"/>
        <pathelement location="lib/org.eclipse.emf.ecore_2.8.0.v20120606-0717.jar"/>
        <pathelement location="lib/xmlpull-1.1.3.1.jar"/>
        <pathelement location="lib/xpp3_min-1.1.4c.jar"/>
        <pathelement location="lib/xstream-1.4.4.jar"/>
	<pathelement location="lib/gr-sexp.jar"/>

	<pathelement location="lib/jung/jung-api-2.0.1.jar"/>
	<pathelement location="lib/jung/jung-algorithms-2.0.1.jar"/>
	<pathelement location="lib/jung/jung-graph-impl-2.0.2-SNAPSHOT.jar"/>
	<pathelement location="lib/jung/jung-io-2.0.1.jar"/>
	<pathelement location="lib/jung/jung-jai-2.0.1.jar"/>
<pathelement location="lib/jung/jung-visualization-2.0.1.jar"/>
<pathelement location="lib/jung/jung-api-2.0.1.jar"/>
<pathelement location="lib/jung/jung-api-2.0.1.jar"/>


    </path>

    <taskdef name="groovyc"
         classname="org.codehaus.groovy.ant.Groovyc"
         classpathref="Groovy Libraries.libraryclasspath"/>



    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="resources">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test-resources">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <groovyc  destdir="bin"  >
            <src path="src"/>
            <src path="test"/>
            <src path="resources"/>
            <src path="test-resources"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </groovyc>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="NPPN">
        <java classname="org.k1s.nppn.NPPN" failonerror="true" fork="yes">
            <classpath refid="NPPN-CLI.classpath"/>
        </java>
    </target>
    <target name="CPNBuilderTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.cpnBuilder.CPNBuilderTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="PragmaticsDescriptorDSLTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.pragmatics.PragmaticsDescriptorDSLTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="PragmaticsDerivatorTests.testGetServicePages">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.blocks.derived.PragmaticsDerivatorTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="NPPNTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.NPPNTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="PragmaticsDerivatorTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.blocks.derived.PragmaticsDerivatorTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="ATTFactoryTests.testATTSettinCFPragmatics">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.att.ATTFactoryTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="ATTFactoryTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.att.ATTFactoryTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="BlockDecomposerTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.blocks.BlockDecomposerTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="CodeGeneratorTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.generation.CodeGeneratorTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="ATTFactoryTests.testATTForSenderSend">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.att.ATTFactoryTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="PNPatternsTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.blocks.derived.PNPatternsTest" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="PragmaticsCheckerTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.pragmatics.PragmaticsCheckerTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="CodeGeneratorTests.testMessageSendingProtocol">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.generation.CodeGeneratorTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="NPPNTests.testMainPacketProtocol">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.NPPNTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="CpnIOTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.cpn.io.CpnIOTests" todir="${junit.output.dir}"/>
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.k1s.nppn.NPPNTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.att.ATTFactoryTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.blocks.derived.PNPatternsTest" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.blocks.derived.PragmaticsDerivatorTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.cpn.io.CpnIOTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.cpnBuilder.CPNBuilderTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.generation.ChoiceCodeGeneratorTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.generation.CodeGeneratorTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.pragmatics.PragmaticsCheckerTests" todir="${junit.output.dir}"/>
            <test name="org.k1s.nppn.pragmatics.PragmaticsDescriptorDSLTests" todir="${junit.output.dir}"/> 
<!--	    <batchtest>
                <fileset dir="bin" includes="**/*Test*.class" />
            </batchtest> -->
            <classpath refid="NPPN-CLI.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
